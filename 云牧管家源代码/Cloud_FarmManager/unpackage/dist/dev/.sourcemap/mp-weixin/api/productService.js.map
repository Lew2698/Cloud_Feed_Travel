{"version":3,"file":"productService.js","sources":["api/productService.js"],"sourcesContent":["// 商品数据服务 - 云端版本\r\n// 替代原来的 data/products.js\r\n\r\n/**\r\n * 获取所有商品列表（简化版，用于商城页面）\r\n * @param {Object} options 查询选项\r\n * @returns {Promise<Array>} 商品列表\r\n */\r\nexport async function getAllProducts(options = {}) {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tpageSize = 20,\r\n\t\t\tpageNum = 1,\r\n\t\t\tcategory = null,\r\n\t\t\tisNew = null,\r\n\t\t\tisOrganic = null,\r\n\t\t\tsortBy = 'createTime',\r\n\t\t\tsortOrder = 'desc'\r\n\t\t} = options;\r\n\t\t\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'product-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'getProductList',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tpageSize,\r\n\t\t\t\t\tpageNum,\r\n\t\t\t\t\tcategory,\r\n\t\t\t\t\tisNew,\r\n\t\t\t\t\tisOrganic,\r\n\t\t\t\t\tsortBy,\r\n\t\t\t\t\tsortOrder\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (result.result.code === 200) {\r\n\t\t\t// 转换数据格式以兼容原有代码\r\n\t\t\tconst products = result.result.data.list.map(product => ({\r\n\t\t\t\tid: product._id, // 使用云数据库的_id作为id\r\n\t\t\t\tname: product.name,\r\n\t\t\t\tprice: product.price,\r\n\t\t\t\timage: product.images && product.images[0] ? product.images[0] : '',\r\n\t\t\t\tsales: product.sales,\r\n\t\t\t\trating: product.rating,\r\n\t\t\t\tbadge: product.isNew ? '新品' : (product.isOrganic ? '有机' : ''),\r\n\t\t\t\t// 保留完整的商品信息\r\n\t\t\t\t...product\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\treturn products;\r\n\t\t} else {\r\n\t\t\tconsole.error('获取商品列表失败:', result.result.message);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error('获取商品列表异常:', error);\r\n\t\t// 返回空数组，避免页面崩溃\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n/**\r\n * 根据商品ID获取商品详情\r\n * @param {String} id 商品ID\r\n * @returns {Promise<Object|null>} 商品详情\r\n */\r\nexport async function getProductById(id) {\r\n\ttry {\r\n\t\tif (!id) {\r\n\t\t\tconsole.error('商品ID不能为空');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'product-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'getProductById',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tproductId: id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (result.result.code === 200) {\r\n\t\t\tconst product = result.result.data;\r\n\t\t\t// 添加兼容性字段\r\n\t\t\tproduct.id = product._id;\r\n\t\t\treturn product;\r\n\t\t} else if (result.result.code === 404) {\r\n\t\t\tconsole.warn('商品不存在:', id);\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tconsole.error('获取商品详情失败:', result.result.message);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error('获取商品详情异常:', error);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * 搜索商品\r\n * @param {String} keyword 搜索关键词\r\n * @param {Object} options 搜索选项\r\n * @returns {Promise<Array>} 搜索结果\r\n */\r\nexport async function searchProducts(keyword, options = {}) {\r\n\ttry {\r\n\t\tif (!keyword) {\r\n\t\t\tconsole.error('搜索关键词不能为空');\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\t\r\n\t\tconst {\r\n\t\t\tpageSize = 20,\r\n\t\t\tpageNum = 1\r\n\t\t} = options;\r\n\t\t\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'product-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'searchProducts',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tkeyword,\r\n\t\t\t\t\tpageSize,\r\n\t\t\t\t\tpageNum\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif (result.result.code === 200) {\r\n\t\t\t// 转换数据格式以兼容原有代码\r\n\t\t\tconst products = result.result.data.list.map(product => ({\r\n\t\t\t\tid: product._id,\r\n\t\t\t\tname: product.name,\r\n\t\t\t\tprice: product.price,\r\n\t\t\t\timage: product.images && product.images[0] ? product.images[0] : '',\r\n\t\t\t\tsales: product.sales,\r\n\t\t\t\trating: product.rating,\r\n\t\t\t\tbadge: product.isNew ? '新品' : (product.isOrganic ? '有机' : ''),\r\n\t\t\t\t...product\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\treturn products;\r\n\t\t} else {\r\n\t\t\tconsole.error('搜索商品失败:', result.result.message);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error('搜索商品异常:', error);\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n/**\r\n * 获取商品分类列表\r\n * @returns {Promise<Array>} 分类列表\r\n */\r\nexport async function getProductCategories() {\r\n\ttry {\r\n\t\t// 这里可以从云端获取分类数据，暂时返回固定分类\r\n\t\treturn [\r\n\t\t\t{ value: 'food', label: '食品' },\r\n\t\t\t{ value: 'handicraft', label: '手工艺品' },\r\n\t\t\t{ value: 'other', label: '其他' }\r\n\t\t];\r\n\t} catch (error) {\r\n\t\tconsole.error('获取商品分类异常:', error);\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n// 缓存管理\r\nconst cache = {\r\n\tproducts: null,\r\n\ttimestamp: 0,\r\n\tduration: 5 * 60 * 1000 // 5分钟缓存\r\n};\r\n\r\n/**\r\n * 获取缓存的商品列表\r\n * @param {Object} options 查询选项\r\n * @returns {Promise<Array>} 商品列表\r\n */\r\nexport async function getCachedProducts(options = {}) {\r\n\tconst now = Date.now();\r\n\t\r\n\t// 检查缓存是否有效\r\n\tif (cache.products && (now - cache.timestamp) < cache.duration) {\r\n\t\treturn cache.products;\r\n\t}\r\n\t\r\n\t// 获取新数据并缓存\r\n\tconst products = await getAllProducts(options);\r\n\tcache.products = products;\r\n\tcache.timestamp = now;\r\n\t\r\n\treturn products;\r\n}\r\n\r\n/**\r\n * 清除缓存\r\n */\r\nexport function clearCache() {\r\n\tcache.products = null;\r\n\tcache.timestamp = 0;\r\n} "],"names":["uniCloud","uni"],"mappings":";;AAQO,eAAe,eAAe,UAAU,IAAI;AAClD,MAAI;AACH,UAAM;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,MACV,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,IACZ,IAAG;AAEJ,UAAM,SAAS,MAAMA,cAAQ,GAAC,aAAa;AAAA,MAC1C,MAAM;AAAA,MACN,MAAM;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACA;AAAA,MACD;AAAA,IACJ,CAAG;AAED,QAAI,OAAO,OAAO,SAAS,KAAK;AAE/B,YAAM,WAAW,OAAO,OAAO,KAAK,KAAK,IAAI,cAAY;AAAA,QACxD,IAAI,QAAQ;AAAA;AAAA,QACZ,MAAM,QAAQ;AAAA,QACd,OAAO,QAAQ;AAAA,QACf,OAAO,QAAQ,UAAU,QAAQ,OAAO,CAAC,IAAI,QAAQ,OAAO,CAAC,IAAI;AAAA,QACjE,OAAO,QAAQ;AAAA,QACf,QAAQ,QAAQ;AAAA,QAChB,OAAO,QAAQ,QAAQ,OAAQ,QAAQ,YAAY,OAAO;AAAA;AAAA,QAE1D,GAAG;AAAA,MACH,EAAC;AAEF,aAAO;AAAA,IACV,OAAS;AACNC,0BAAA,MAAA,SAAA,+BAAc,aAAa,OAAO,OAAO,OAAO;AAChD,aAAO;IACP;AAAA,EACD,SAAQ,OAAO;AACfA,sEAAc,aAAa,KAAK;AAEhC,WAAO;EACP;AACF;AAOO,eAAe,eAAe,IAAI;AACxC,MAAI;AACH,QAAI,CAAC,IAAI;AACRA,oBAAAA,MAAc,MAAA,SAAA,+BAAA,UAAU;AACxB,aAAO;AAAA,IACP;AAED,UAAM,SAAS,MAAMD,cAAQ,GAAC,aAAa;AAAA,MAC1C,MAAM;AAAA,MACN,MAAM;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,WAAW;AAAA,QACX;AAAA,MACD;AAAA,IACJ,CAAG;AAED,QAAI,OAAO,OAAO,SAAS,KAAK;AAC/B,YAAM,UAAU,OAAO,OAAO;AAE9B,cAAQ,KAAK,QAAQ;AACrB,aAAO;AAAA,IACP,WAAU,OAAO,OAAO,SAAS,KAAK;AACtCC,oBAAA,MAAA,MAAA,QAAA,+BAAa,UAAU,EAAE;AACzB,aAAO;AAAA,IACV,OAAS;AACNA,0BAAA,MAAA,SAAA,+BAAc,aAAa,OAAO,OAAO,OAAO;AAChD,aAAO;AAAA,IACP;AAAA,EACD,SAAQ,OAAO;AACfA,sEAAc,aAAa,KAAK;AAChC,WAAO;AAAA,EACP;AACF;;;"}