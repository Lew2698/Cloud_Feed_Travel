{"version":3,"file":"imageService.js","sources":["api/imageService.js"],"sourcesContent":["// 图片管理服务\r\n// 封装云存储图片相关功能\r\n\r\n/**\r\n * 上传图片到云存储\r\n * @param {Object} options 上传选项\r\n * @returns {Promise<Object>} 上传结果\r\n */\r\nexport async function uploadImage(options = {}) {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tcategory = 'products',\r\n\t\t\tcount = 1,\r\n\t\t\tsizeType = ['compressed'],\r\n\t\t\tsourceType = ['camera', 'album']\r\n\t\t} = options;\r\n\t\t\r\n\t\t// 选择图片\r\n\t\tconst chooseResult = await uni.chooseImage({\r\n\t\t\tcount,\r\n\t\t\tsizeType,\r\n\t\t\tsourceType\r\n\t\t});\r\n\t\t\r\n\t\tif (!chooseResult.tempFilePaths || chooseResult.tempFilePaths.length === 0) {\r\n\t\t\tthrow new Error('未选择图片');\r\n\t\t}\r\n\t\t\r\n\t\tconst uploadResults = [];\r\n\t\t\r\n\t\t// 批量上传图片\r\n\t\tfor (let i = 0; i < chooseResult.tempFilePaths.length; i++) {\r\n\t\t\tconst tempFilePath = chooseResult.tempFilePaths[i];\r\n\t\t\t\r\n\t\t\t// 生成文件名\r\n\t\t\tconst fileName = `${category}_${Date.now()}_${i}`;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t// 上传到云存储\r\n\t\t\t\tconst uploadResult = await uniCloud.uploadFile({\r\n\t\t\t\t\tfilePath: tempFilePath,\r\n\t\t\t\t\tcloudPath: `images/${category}/${fileName}.jpg`\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif (uploadResult.fileID) {\r\n\t\t\t\t\tuploadResults.push({\r\n\t\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\t\tfileID: uploadResult.fileID,\r\n\t\t\t\t\t\tcloudPath: `images/${category}/${fileName}.jpg`,\r\n\t\t\t\t\t\toriginalPath: tempFilePath\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuploadResults.push({\r\n\t\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\t\terror: '上传失败',\r\n\t\t\t\t\t\toriginalPath: tempFilePath\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('上传图片失败:', error);\r\n\t\t\t\tuploadResults.push({\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\terror: error.message,\r\n\t\t\t\t\toriginalPath: tempFilePath\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tcode: 200,\r\n\t\t\tmessage: '图片上传完成',\r\n\t\t\tdata: {\r\n\t\t\t\ttotal: chooseResult.tempFilePaths.length,\r\n\t\t\t\tsuccess: uploadResults.filter(r => r.success).length,\r\n\t\t\t\tfailed: uploadResults.filter(r => !r.success).length,\r\n\t\t\t\tresults: uploadResults\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t} catch (error) {\r\n\t\tconsole.error('选择图片失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '上传图片失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 上传Base64图片\r\n * @param {String} base64Data Base64图片数据\r\n * @param {String} fileName 文件名\r\n * @param {String} category 分类\r\n * @returns {Promise<Object>} 上传结果\r\n */\r\nexport async function uploadBase64Image(base64Data, fileName = 'image', category = 'products') {\r\n\ttry {\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'image-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'uploadBase64Image',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tbase64Data,\r\n\t\t\t\t\tfileName,\r\n\t\t\t\t\tcategory\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result.result;\r\n\t} catch (error) {\r\n\t\tconsole.error('上传Base64图片失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '上传Base64图片失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 删除云存储图片\r\n * @param {String} fileID 文件ID\r\n * @returns {Promise<Object>} 删除结果\r\n */\r\nexport async function deleteImage(fileID) {\r\n\ttry {\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'image-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'deleteImage',\r\n\t\t\t\tdata: { fileID }\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result.result;\r\n\t} catch (error) {\r\n\t\tconsole.error('删除图片失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '删除图片失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 获取图片的临时访问URL\r\n * @param {Array} fileIDs 文件ID列表\r\n * @returns {Promise<Object>} URL列表\r\n */\r\nexport async function getTempFileURLs(fileIDs) {\r\n\ttry {\r\n\t\tif (!Array.isArray(fileIDs)) {\r\n\t\t\tfileIDs = [fileIDs];\r\n\t\t}\r\n\t\t\r\n\t\tconst result = await uniCloud.getTempFileURL({\r\n\t\t\tfileList: fileIDs\r\n\t\t});\r\n\t\t\r\n\t\treturn {\r\n\t\t\tcode: 200,\r\n\t\t\tmessage: '获取临时URL成功',\r\n\t\t\tdata: result.fileList\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.error('获取临时URL失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '获取临时URL失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 批量迁移本地图片映射\r\n * @returns {Promise<Object>} 迁移映射\r\n */\r\nexport async function getImageMigrationMapping() {\r\n\ttry {\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'image-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'migrateLocalImages',\r\n\t\t\t\tdata: {}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result.result;\r\n\t} catch (error) {\r\n\t\tconsole.error('获取图片迁移映射失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '获取图片迁移映射失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 更新商品数据中的图片路径\r\n * @param {Object} imageMapping 图片路径映射\r\n * @returns {Promise<Object>} 更新结果\r\n */\r\nexport async function updateProductImages(imageMapping) {\r\n\ttry {\r\n\t\tconst result = await uniCloud.callFunction({\r\n\t\t\tname: 'image-manager',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'updateProductImages',\r\n\t\t\t\tdata: { imageMapping }\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn result.result;\r\n\t} catch (error) {\r\n\t\tconsole.error('更新商品图片路径失败:', error);\r\n\t\treturn {\r\n\t\t\tcode: 500,\r\n\t\t\tmessage: '更新商品图片路径失败',\r\n\t\t\terror: error.message\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * 图片压缩功能\r\n * @param {String} filePath 图片路径\r\n * @param {Object} options 压缩选项\r\n * @returns {Promise<String>} 压缩后的图片路径\r\n */\r\nexport async function compressImage(filePath, options = {}) {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tquality = 0.8,\r\n\t\t\twidth = 800,\r\n\t\t\theight = 600\r\n\t\t} = options;\r\n\t\t\r\n\t\tconst result = await uni.compressImage({\r\n\t\t\tsrc: filePath,\r\n\t\t\tquality,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t});\r\n\t\t\r\n\t\treturn result.tempFilePath;\r\n\t} catch (error) {\r\n\t\tconsole.error('图片压缩失败:', error);\r\n\t\treturn filePath; // 压缩失败时返回原图片\r\n\t}\r\n}\r\n\r\n/**\r\n * 图片预览功能\r\n * @param {Array|String} urls 图片URL列表或单个URL\r\n * @param {Number} current 当前预览的图片索引\r\n */\r\nexport function previewImages(urls, current = 0) {\r\n\tif (typeof urls === 'string') {\r\n\t\turls = [urls];\r\n\t}\r\n\t\r\n\tuni.previewImage({\r\n\t\turls,\r\n\t\tcurrent\r\n\t});\r\n}\r\n\r\n/**\r\n * 商品图片上传助手 - 专门用于商品相关的图片上传\r\n * @param {String} type 图片类型：'main'主图, 'detail'详情图, 'avatar'头像等\r\n * @param {Object} options 上传选项\r\n * @returns {Promise<Object>} 上传结果\r\n */\r\nexport async function uploadProductImage(type = 'main', options = {}) {\r\n\tconst categoryMap = {\r\n\t\t'main': 'products',\r\n\t\t'detail': 'products/detail',\r\n\t\t'avatar': 'avatars',\r\n\t\t'farm': 'farms',\r\n\t\t'trace': 'trace'\r\n\t};\r\n\t\r\n\tconst category = categoryMap[type] || 'products';\r\n\t\r\n\treturn await uploadImage({\r\n\t\tcategory,\r\n\t\t...options\r\n\t});\r\n}\r\n\r\n/**\r\n * 新增商品时的图片管理\r\n * 包含主图、详情图等完整的图片上传流程\r\n */\r\nexport class ProductImageManager {\r\n\tconstructor() {\r\n\t\tthis.mainImages = []; // 主图列表\r\n\t\tthis.detailImages = []; // 详情图列表\r\n\t\tthis.farmLogo = ''; // 农场Logo\r\n\t}\r\n\t\r\n\t// 添加主图\r\n\tasync addMainImage() {\r\n\t\ttry {\r\n\t\t\tconst result = await uploadProductImage('main', { count: 9 });\r\n\t\t\tif (result.code === 200) {\r\n\t\t\t\tconst successImages = result.data.results.filter(r => r.success);\r\n\t\t\t\tthis.mainImages.push(...successImages.map(img => img.fileID));\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tadded: successImages.length,\r\n\t\t\t\t\ttotal: this.mainImages.length\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { success: false, message: result.message };\r\n\t\t} catch (error) {\r\n\t\t\treturn { success: false, message: error.message };\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 添加详情图\r\n\tasync addDetailImage() {\r\n\t\ttry {\r\n\t\t\tconst result = await uploadProductImage('detail', { count: 9 });\r\n\t\t\tif (result.code === 200) {\r\n\t\t\t\tconst successImages = result.data.results.filter(r => r.success);\r\n\t\t\t\tthis.detailImages.push(...successImages.map(img => img.fileID));\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: true,\r\n\t\t\t\t\tadded: successImages.length,\r\n\t\t\t\t\ttotal: this.detailImages.length\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { success: false, message: result.message };\r\n\t\t} catch (error) {\r\n\t\t\treturn { success: false, message: error.message };\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 上传农场Logo\r\n\tasync uploadFarmLogo() {\r\n\t\ttry {\r\n\t\t\tconst result = await uploadProductImage('farm', { count: 1 });\r\n\t\t\tif (result.code === 200 && result.data.results[0].success) {\r\n\t\t\t\tthis.farmLogo = result.data.results[0].fileID;\r\n\t\t\t\treturn { success: true, fileID: this.farmLogo };\r\n\t\t\t}\r\n\t\t\treturn { success: false, message: result.message };\r\n\t\t} catch (error) {\r\n\t\t\treturn { success: false, message: error.message };\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 移除图片\r\n\tremoveMainImage(index) {\r\n\t\tif (index >= 0 && index < this.mainImages.length) {\r\n\t\t\tthis.mainImages.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveDetailImage(index) {\r\n\t\tif (index >= 0 && index < this.detailImages.length) {\r\n\t\t\tthis.detailImages.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 获取图片数据（用于保存商品时）\r\n\tgetImageData() {\r\n\t\treturn {\r\n\t\t\timages: this.mainImages,\r\n\t\t\tdetailImages: this.detailImages,\r\n\t\t\tfarmLogo: this.farmLogo\r\n\t\t};\r\n\t}\r\n\t\r\n\t// 清空所有图片\r\n\tclear() {\r\n\t\tthis.mainImages = [];\r\n\t\tthis.detailImages = [];\r\n\t\tthis.farmLogo = '';\r\n\t}\r\n} "],"names":["uni","uniCloud"],"mappings":"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"}